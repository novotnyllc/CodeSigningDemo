trigger:
- main
- rel/*

pr:
- main
- rel/*

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    variables:
      BuildConfiguration: Release

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK 6.x'
      inputs:
        version: 6.x

    - task: DotNetCoreCLI@2
      inputs:
        command: pack
        packagesToPack: src/AClassLibrary/AClassLibrary.csproj
        configuration: $(BuildConfiguration)
        packDirectory: $(Build.ArtifactStagingDirectory)/Packages    
        verbosityPack: Minimal
      displayName: Build Package

    - publish: $(Build.ArtifactStagingDirectory)/Packages   
      displayName: Publish Build Artifacts  
      artifact: BuildPackages

    - publish: config
      displayName: Publish signing file list
      artifact: config

- stage: CodeSign
  dependsOn: Build
  condition: and(succeeded('Build'), not(eq(variables['build.reason'], 'PullRequest')))
  jobs:
  - job: CodeSign
    displayName: Code Signing
    pool:
      vmImage: windows-latest
    variables:
    - group: Sign Client Credentials

    steps:
    - download: current
      artifact: config
      displayName: Download signing file list

    - download: current
      artifact: BuildPackages
      displayName: Download build artifacts

    - task: UseDotNet@2
      displayName: 'Use .NET SDK 6.x'
      inputs:
        version: 6.x

    - task: DotNetCoreCLI@2
      inputs:
        command: custom
        custom: tool
        arguments: install --tool-path . sign --version 0.9.0-beta.23127.3
      displayName: Install SignTool tool

    - pwsh: |
        .\sign code azure-key-vault `
        "**/*.nupkg" `
        --base-directory "$(Pipeline.Workspace)\BuildPackages" `
        --file-list "$(Pipeline.Workspace)\config\filelist.txt" `
        --publisher-name "CodeSignDemo" `
        --description "CodeSignDemo" `
        --description-url "https://github.com/novotnyllc/CodeSignDemo" `
        --azure-key-vault-tenant-id "$(SignTenantId)" `
        --azure-key-vault-client-id "$(SignClientId)" `
        --azure-key-vault-client-secret '$(SignClientSecret)' `
        --azure-key-vault-certificate "$(SignKeyVaultCertificate)" `
        --azure-key-vault-url "$(SignKeyVaultUrl)"
      displayName: Sign packages
        
    - publish: $(Pipeline.Workspace)/BuildPackages
      displayName: Publish Signed Packages
      artifact: SignedPackages
