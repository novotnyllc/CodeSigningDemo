trigger:
- master
- rel/*

pr:
- master
- rel/*

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: windows-latest

    variables:
      BuildConfiguration: Release

    steps:
    - task: DotNetCoreCLI@2  
      inputs:
        command: custom
        custom: tool
        arguments: install --tool-path . nbgv
      displayName: Install NBGV tool

    - script: nbgv cloud
      displayName: Set Version

    - task: DotNetCoreCLI@2
      inputs:
        command: pack
        packagesToPack: src/AClassLibrary/AClassLibrary.csproj
        configuration: $(BuildConfiguration)
        packDirectory: $(Build.ArtifactStagingDirectory)\Packages    
        verbosityPack: Minimal
      displayName: Build Package

    - publish: $(Build.ArtifactStagingDirectory)\Packages   
      displayName: Publish Build Artifacts  
      artifact: BuildPackages

    - publish: config
      displayName: Publish Signing Scripts
      artifact: config

- stage: CodeSign
  condition: and(succeeded('Build'), not(eq(variables['build.reason'], 'PullRequest')))
  jobs:
  - deployment: CodeSign
    displayName: Code Signing
    pool:
      vmImage: windows-latest    
    environment: Code Sign - Approvals
    variables:
    - group: Sign Client Credentials
    strategy:
      runOnce:
        deploy:
          steps:
          # If you have MSCA: https://aka.ms/mscadocs
          - task: ms-codeanalysis.vss-microsoft-security-code-analysis-devops.build-task-antimalware.AntiMalware@3
            displayName: AntiMalware Scan
            inputs:
              EnableServices: true
              FileDirPath: $(Pipeline.Workspace)\BuildPackages

          - task: DotNetCoreCLI@2
            inputs:
              command: custom
              custom: tool
              arguments: install --tool-path . SignClient
            displayName: Install SignTool tool

          - pwsh: |
              .\SignClient "Sign" `
              --baseDirectory "$(Pipeline.Workspace)\BuildPackages" `
              --input "**/*.nupkg" `
              --config "$(Pipeline.Workspace)\config\SignClient.json" `
              --filelist "$(Pipeline.Workspace)\config\filelist.txt" `
              --user "$(SignClientUser)" `
              --secret '$(SignClientSecret)' `
              --name "CodeSignDemo" `
              --description "CodeSignDemo" `
              --descriptionUrl "https://github.com/novotnyllc/CodeSignDemo"
            displayName: Sign packages
              
          - publish: $(Pipeline.Workspace)/BuildPackages
            displayName: Publish Signed Packages
            artifact: SignedPackages
